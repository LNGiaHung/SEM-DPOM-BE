/api/products:
  get:
    tags:
      - Products
    summary: Get all products
    description: Retrieve a list of products with optional filtering
    parameters:
      - in: query
        name: page
        schema:
          type: integer
          default: 1
        description: Page number
      - in: query
        name: limit
        schema:
          type: integer
          default: 10
        description: Number of items per page
      - in: query
        name: category
        schema:
          type: string
        description: Filter by category ID
      - in: query
        name: search
        schema:
          type: string
        description: Search term for product name or description
    responses:
      200:
        description: Successful response
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    $ref: '#/components/schemas/Product'
                totalPages:
                  type: integer
                currentPage:
                  type: integer
      500:
        description: Server error

  post:
    tags:
      - Products
    summary: Create a new product
    description: Add a new product (Admin/Vendor only)
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductInput'
    responses:
      201:
        description: Product created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      401:
        description: Unauthorized
      403:
        description: Forbidden - Not admin/vendor
      500:
        description: Server error
